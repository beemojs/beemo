import { ModuleFormat, OutputOptions, RollupOptions } from 'rollup';

export type RollupConfig = RollupOptions;

export interface RollupArgs {
  'amd.autoId'?: boolean;
  'amd.basePath'?: string;
  'amd.define'?: string;
  'amd.id'?: string;
  assetFileNames?: string;
  banner?: string;
  c?: string;
  chunkFileNames?: string;
  compact?: boolean;
  config?: string;
  context?: string;
  d?: string;
  dir?: string;
  e?: string[];
  entryFileNames?: string;
  environment?: string;
  esModule?: boolean;
  exports?: OutputOptions['exports'];
  extend?: boolean;
  external?: string;
  externalLiveBindings?: boolean;
  f?: ModuleFormat;
  failAfterWarnings?: boolean;
  file?: string;
  footer?: string;
  format?: ModuleFormat;
  freeze?: boolean;
  g?: string;
  globals?: string;
  h?: boolean;
  help?: boolean;
  hoistTransitiveImports?: boolean;
  i?: string;
  indent?: boolean;
  inlineDynamicImports?: boolean;
  input?: string;
  interop?: boolean;
  intro?: string;
  m?: OutputOptions['sourcemap'];
  minifyInternalExports?: boolean;
  n?: string;
  name?: string;
  namespaceToStringTag?: string;
  noConflict?: boolean;
  o?: string;
  outro?: string;
  p?: string;
  plugin?: string;
  preferConst?: boolean;
  preserveEntrySignatures?: boolean;
  preserveModules?: boolean;
  preserveModulesRoot?: boolean;
  preserveSymlinks?: boolean;
  shimMissingExports?: boolean;
  silent?: boolean;
  sourcemap?: OutputOptions['sourcemap'];
  sourcemapExcludeSources?: boolean;
  sourcemapFile?: string;
  stdin?: boolean | string;
  strict?: boolean;
  strictDeprecations?: boolean;
  systemNullSetters?: boolean;
  treeshake?: boolean;
  'treeshake.annotations'?: boolean;
  'treeshake.moduleSideEffects'?: boolean;
  'treeshake.propertyReadSideEffects'?: boolean;
  'treeshake.tryCatchDeoptimization'?: boolean;
  'treeshake.unknownGlobalSideEffects'?: boolean;
  v?: boolean;
  validate?: boolean;
  version?: boolean;
  w?: boolean;
  waitForBundleInput?: boolean;
  watch?: boolean;
  'watch.buildDelay'?: string;
  'watch.clearScreen'?: boolean;
  'watch.exclude'?: string;
  'watch.include'?: string;
  'watch.skipWrite'?: boolean;
}
