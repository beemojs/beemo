{
  "babelCleanOption": "Clean the target folder",
  "babelDescription": "Transpile files with Babel",
  "cleanup": "Cleaning up",
  "cliArgConfigNames": "List of driver names to create config files for",
  "cliArgGenerator": "Name of scaffolding generator",
  "cliArgGeneratorAction": "Type of action to scaffold",
  "cliArgGeneratorName": "Name to interpolate within scaffold templates (optional)",
  "cliArgScriptName": "Name of script (in kebab case) to run",
  "cliCommandConfig": "Create a configuration file for all or the specified drivers",
  "cliCommandRunScript": "Run a configuration module or Node module script",
  "cliCommandScaffold": "Generate files with templates from configuration module",
  "cliEpilogue": "For more information, view the manual: {{manualURL}}",
  "cliOptionConcurrency": "Number of builds to run in parallel",
  "cliOptionDryRun": "Execute a dry run",
  "cliOptionStdio": "Customize how output is displayed",
  "cliOptionGraph": "Prioritize workspace builds based on dependency graph",
  "cliOptionWorkspaces": "Run command in each workspace (supports regex)",
  "configCleanup": "Deleting config files",
  "configCopy": "Copying {{name}} config file",
  "configCreate": "Creating {{name}} config file",
  "configCreateLoadFile": "Loading {{name}} config from sources",
  "configCreateLoadPackage": "Loading {{name}} config from local \"package.json\"",
  "configCreateMerge": "Merging {{name}} config objects",
  "configGenerate": "Creating config files",
  "configReference": "Referencing {{name}} config file",
  "configSetEnvVars": "Setting environment variables defined by driver",
  "driverRun": "Running {{name}} v{{version}} driver",
  "driverExecute": "Executing command",
  "driverExecuteCopyWorkspaceConfig": "Copying config into workspace",
  "driverExecuteExpandGlob": "Expanding glob patterns",
  "driverExecuteFilterOptions": "Filtering options",
  "driverExecuteGatherArgs": "Gathering arguments",
  "driverExecuteIncludeConfigOption": "Including config option",
  "eslintDescription": "Lint files with ESLint",
  "flowDescription": "Type check files with Flow",
  "fromTool": "From tool instance: {{message}}",
  "fromModule": "From configuration or node module. {{message}}",
  "jestDescription": "Unit test files with Jest",
  "mochaDriver": "Unit test files with Mocha",
  "noMatch": "(no match)",
  "poweredBy": "Powered by Beemo v{{version}}",
  "prettierDescription": "Format code with Prettier",
  "run": "Run {{tile}}",
  "scaffoldGenerate": "Generating from templates",
  "scaffoldRunGenerator": "Running generator",
  "scriptLoad": "Loading script",
  "scriptLoadPost": "Preparing script tasks",
  "scriptLoadModule": "Loading script from configuration or node module",
  "scriptRun": "Running {{name}} script",
  "signalBufferMessage": "The following output was buffered before being interrupted:",
  "typescriptCleanOption": "Clean the target folder",
  "typescriptDescription": "Type check files with TypeScript",
  "webpackDescription": "Bundle source files with Webpack"
}
